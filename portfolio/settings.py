"""
Django settings for portfolio project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

from django.utils.translation import gettext_lazy as _


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-f$$+h=#f)gy^iiuc!h=+c+21(u1vy-*2^a@hl1s_z1=xlp@kf!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = None
if DEBUG:
    ALLOWED_HOSTS = ['127.0.0.1', '*']
else:
    ALLOWED_HOSTS = ['www.hasankakavand.com',
                     'www.youtube.com',
                     'youtube.com',
                     'hasankakavand.com']

X_FRAME_OPTIONS = 'SAMEORIGIN'

LOGIN_REDIRECT_URL = '/'
LOGIN_URL = '/admin'
LOGOUT_REDIRECT_URL = '/'


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Third-party
    'corsheaders',
    'rest_framework',
    'colorfield',
    'ckeditor',
    'rosetta',
    'parler',
    # Internal
    'blogs.apps.BlogsConfig',
    'contacts.apps.ContactsConfig',
    'educations.apps.EducationsConfig',
    'experiences.apps.ExperiencesConfig',
    'galleries.apps.GalleriesConfig',
    'profiles.apps.ProfilesConfig',
    'reviews.apps.ReviewsConfig',
    'services.apps.ServicesConfig',
    'skills.apps.SkillsConfig',
    'languages.apps.LanguagesConfig',
    'django.contrib.sitemaps',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'django.middleware.gzip.GZipMiddleware',
]

# Compression level (1-9, default is 6)
# GZIP_COMPRESSION_LEVEL = 6

# Minimum size to compress (default is 200)
# GZIP_MIN_LENGTH = 200

ROOT_URLCONF = 'portfolio.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',
                'portfolio.context_processors.default_domain',
            ],
        },
    },
]

WSGI_APPLICATION = 'portfolio.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = None

if DEBUG:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': os.getenv('DB_NAME'),
            'USER': os.getenv('DB_USER'),
            'PASSWORD': os.getenv('DB_PASS'),
            'HOST': os.getenv('DB_HOST'),
            'PORT': os.getenv('DB_PORT', 5432),
        }
    }


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'
LANGUAGES = [
    ('en', _('English')),
    ('fa', _('Farsi')),
    ('ar', _('Arabic')),
]


PARLER_LANGUAGES = {
    None: (
        [{'code': item[0]} for item in LANGUAGES]
    ),
    'default': {
        'fallbacks': ['en'],
        'hide_untranslated': False,
    }
}

TIME_ZONE = 'Asia/Tehran'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static-root/'
STATICFILES_DIRS = [
    BASE_DIR / "static",]

STATIC_ROOT = None

if DEBUG:
    STATIC_ROOT = "static-root/"
else:
    STATIC_ROOT = "/home/hasankak/public_html/static-root/"


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = "/media/"

MEDIA_ROOT = None
if DEBUG:
    MEDIA_ROOT = BASE_DIR / "media"
else:
    MEDIA_ROOT = BASE_DIR / "/home/hasankak/public_html/media"


DEFAULT_RENDERER_CLASSES = [
    'rest_framework.renderers.JSONRenderer',
]

DEFAULT_PARSER_CLASSES = [
    'rest_framework.parsers.JSONParser',
    'rest_framework.parsers.MultiPartParser',
]
DEFAULT_PERMISSION_CLASSES = [
    'profiles.permissions.HasUserPermissions',
]
DEFAULT_AUTHENTICATION_CLASSES = [
    'rest_framework.authentication.SessionAuthentication'
]

if DEBUG:
    DEFAULT_RENDERER_CLASSES += [
        'rest_framework.renderers.BrowsableAPIRenderer'
    ]
    DEFAULT_AUTHENTICATION_CLASSES += [
        'portfolio.rest_api.dev.DevAuthentication',]


REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': DEFAULT_PERMISSION_CLASSES,
    'DEFAULT_RENDERER_CLASSES': DEFAULT_RENDERER_CLASSES,
    'DEFAULT_PARSER_CLASSES': DEFAULT_PARSER_CLASSES,
    'DEFAULT_AUTHENTICATION_CLASSES': DEFAULT_AUTHENTICATION_CLASSES,
    'DEFAULT_PAGINATION_CLASS': 'profiles.pagination.DefaultPagination',
    'COMPACT_JSON': True,
}


# My config

SINGLE_USER = True
SHORT_TEXT_LENGTH = 50
MEDIUM_TEXT_LENGTH = 100
LONG_TEXT_LENGTH = 200

CORS_ALLOW_ALL_ORIGINS = True
CORS_URLS_REGEX = r"^/.*/api/.*$"

DEFAULT_DOMAIN = 'https://{}'.format(
    ALLOWED_HOSTS[0] if ALLOWED_HOSTS else 'localhost')


DEVELOPER_URL = "https://www.mskarbaschian.com"
DEVELOPER_NAME = "Saeid â€Ž Karbaschian"
